//
//  {{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import SnapKit
import IGListKit

class {{ module_info.name }}ViewController: UIViewController, {{module_info.name}}ViewInput {

    var output: {{ module_info.name }}ViewOutput!
    var dataDisplayManager: {{ module_info.name }}DataDisplayManager!

    lazy var collectionView: UICollectionView = {
        let collectionViewLayout: UICollectionViewFlowLayout = UICollectionViewFlowLayout()
        let collectionView = UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
        collectionView.translatesAutoresizingMaskIntoConstraints = false
        return collectionView
    }()

    /// Abstract manager for building main elements
    lazy var adapter: ListAdapter = { [unowned self] in
        let listAdapter: ListAdapter = ListAdapter(updater: ListAdapterUpdater(),
                    viewController: self,
                    workingRangeSize: 3)
        listAdapter.dataSource = self.dataDisplayManager
        return listAdapter
    }()

    // MARK: Life cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        output.didTriggerViewReady()
    }

    // MARK: {{module_info.name}}ViewInput
    func setupInitialState() {
        automaticallyAdjustsScrollViewInsets = false
        view.addSubview(collectionView)
        adapter.collectionView = collectionView
        configureViewConstraints()
    }

    func configureViewConstraints() {
        collectionView.snp.makeConstraints { (make) in
            if #available(iOS 11.0, *) {
                make.top.equalTo(view.safeAreaLayoutGuide.snp.top)
                make.bottom.equalTo(view.safeAreaLayoutGuide.snp.bottom)
            } else {
                make.top.equalTo(self.topLayoutGuide.snp.bottom)
                make.bottom.equalTo(self.bottomLayoutGuide.snp.top)
            }
            make.left.equalToSuperview()
            make.right.equalToSuperview()
        }
     }
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}DataDisplayManagerOutput {

}
